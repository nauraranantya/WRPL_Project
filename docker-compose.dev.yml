services:
  mongodb:
    image: mongo:latest
    container_name: mongodb_dev_container
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_dev_container
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - MONGODB_URI
      - CLOUDINARY_NAME
      - CLOUDINARY_API_KEY
      - CLOUDINARY_SECRET_KEY
      - PORT
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: npm run server
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend_dev_container
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5173/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: npm run dev
    restart: always

volumes:
  mongodb_dev_data: